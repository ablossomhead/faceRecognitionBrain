{"version":3,"sources":["components/navigation/navigation.js","components/logo/logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Register/Register.js","components/Signin/Signin.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/logo/brainiac.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","brainiac","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","name","entries","Register","props","onNameChange","event","setState","target","value","onEmailChange","email","onPasswordChange","password","onSubmitSignIn","preventDefault","state","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","user","id","loadUser","htmlFor","this","React","Component","Signin","signInEmail","signInPassword","alert","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","line_linked","opacity","move","direction","speed","size","anim","opacity_min","interactivity","events","onclick","mode","modes","push","particles_nb","retina_detect","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFacebox","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.abaf835f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n        if (isSignedIn) {\r\n            return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim white underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f4 link dim white underline pa3 pointer'>Sign in</p>\r\n                <p onClick={() => onRouteChange('Register')} className='f4 link dim white underline pa3 pointer'>Register</p>\r\n            </nav></div>\r\n            )\r\n        }\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './logo.css';\r\nimport brainiac from './brainiac.png';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt \r\n            className=\"Tilt br3 shadow-2\" \r\n            options={{ max : 75 }} \r\n            style={{ height: 150, width: 150 }} \r\n            >\r\n                <div className=\"Tilt-inner pa3\"><img alt='logo' src={brainiac}/></div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3 white'>\r\n                {'This Magic Brain will detect faces in pictures. Give it a try.'}\r\n            </p>\r\n            <div className='pa3'>\r\n                <div className='form pa4 br3 shadow-5'>\r\n                <input className='f4 br3 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n                <button \r\n                className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                onClick={onSubmit}\r\n                >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ( { name, entries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                Hello, {name}, your entry count is...\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Rank;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n  \r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n  onSubmitSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { email, password, name } = this.state;\r\n    console.log(this.state);\r\n    fetch('https://findfaceapp.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        name: name\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id) {\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className='br2 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center'>\r\n<main className=\"pa4 black-80\">\r\n  <form className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"textl\" \r\n        name=\"name\"  \r\n        id=\"name\"\r\n        onChange={this.onNameChange}/>\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"email\" \r\n        name=\"email-address\"  \r\n        id=\"email-address\"\r\n        onChange={this.onEmailChange}/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"new-password\" \r\n        name=\"password\"  \r\n        id=\"password\"\r\n        onChange={this.onPasswordChange}/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input \r\n        onClick={this.onSubmitSignIn}\r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n        type=\"submit\" \r\n        value=\"Register\"/>\r\n    </div>\r\n  </form>\r\n</main>\r\n</article>\r\n    );\r\n\r\n}\r\n}\r\n \r\nexport default Register;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n  onSubmitSignIn = (event) => {\r\n    event.preventDefault();\r\n    const { signInEmail, signInPassword } = this.state;\r\n    fetch('https://findfaceapp.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: signInEmail,\r\n        password: signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id) {\r\n        this.props.loadUser(user);\r\n        this.props.onRouteChange('home');\r\n      } else {\r\n        alert(\"unregistered user\")\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    // const { onRouteChange } = this.props;\r\n    return (\r\n<article className='br2 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center'>\r\n<main className=\"pa4 black-80\">\r\n  <form className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input \r\n          className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"email\" \r\n          name=\"email-address\"  \r\n          id=\"email-address\"\r\n          onChange={this.onEmailChange}/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n          className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n          type=\"current-password\" \r\n          name=\"password\"  \r\n          id=\"password\"\r\n          onChange={this.onPasswordChange}/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input \r\n        onClick={this.onSubmitSignIn}\r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n        type=\"submit\" \r\n        value=\"Sign in\"/>\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n      <p onClick={() => this.props.onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n    </div>\r\n  </form>\r\n</main>\r\n</article>\r\n    )\r\n  }\r\n}\r\n \r\nexport default Signin;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img  \r\n                    id='inputimage' \r\n                    alt='hi' \r\n                    src={imageUrl} \r\n                    width='500px' \r\n                    height='auto'\r\n                />\r\n                <div \r\n                    className='bounding-box' \r\n                    style={{\r\n                        top: box.topRow, \r\n                        right: box.rightCol, \r\n                        bottom: box.bottomRow, \r\n                        left: box.leftCol\r\n                    }} \r\n                ></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation';\nimport Logo from './components/logo/logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\n\nimport './App.css';\n\nconst particlesOptions = {\n    particles: {\n      number: {\n        value: 200,\n        density: {\n          enable: true,\n          value_area: 1500\n        }\n      },\n      line_linked: {\n          enable: true,\n          opacity: 0.02\n      },\n      move: {\n          direction: \"right\",\n          speed: 0.05\n      },\n      size: {\n          value: 1\n      },\n      opacity: {\n          anim: {\n              enable: true,\n              speed: 1,\n              opacity_min: 0.05\n          }\n      }\n  },\n  interactivity: {\n      events: {\n          onclick: {\n              enable: true,\n              mode: \"push\"\n          }\n      },\n      modes: {\n          push: {\n              particles_nb: 1\n          }\n      }\n  },\n  retina_detect: true\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id:'',\n    name:'',\n    email:'',\n    entries: 0,\n    joined: ''\n}\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    }\n\n\nloadUser = (data) => {\n  this.setState({user: {\n    id: data.id,\n    name:data.name,\n    email: data.email,\n    entries: data.entries,\n    joined: data.joined\n  }\n  })\n}\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col*width),\n    bottomRow: height - (clarifaiFace.bottom_row*height)\n  }\n}\n\ndisplayFacebox = (box) => {\nthis.setState({box})\n}\n\nonInputChange = (event) => {\nthis.setState({input: event.target.value});\n}\nonSubmit = () => {\nthis.setState({imageUrl: this.state.input })\n  fetch('https://findfaceapp.herokuapp.com/imageUrl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n      })\n    })\n    .then(response => response.json())\n  .then(response => {\n    if (response) {\n      fetch('https://findfaceapp.herokuapp.com/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n      })\n    })\n    .then(response => response.json())\n    .then(count => {\n      this.setState(Object.assign(this.state.user, {entries: count}))\n    })\n    .catch(err => console.log(err))\n  }\n    this.displayFacebox(this.calculateFaceLocation(response))\n  })\n  .catch(err => console.log(err));\n}\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState(initialState)\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route})\n}\n\nrender() {\n    return (\n      <div className=\"App\">\n          <Particles className='particles'\n              params={particlesOptions}\n          />\n          <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n          { this.state.route === 'home' \n            ? <div>\n                <Logo />\n                <Rank name={this.state.user.name} entries={this.state.user.entries} />\n                <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onSubmit={this.onSubmit}/>\n                <FaceRecognition \n                  box={this.state.box} \n                  imageUrl={this.state.imageUrl}/>\n              </div>\n            : (\n              this.state.route === 'signin' \n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n          }\n      </div>\n    );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brainiac.19f1e510.png\";"],"sourceRoot":""}